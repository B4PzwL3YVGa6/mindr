library(Rd2roxygen)
install.packages('Rd2roxygen')
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
library(mindr)
#' @param folder character. The folder which contains the input file(s).
#' @param savefilename character. Valid when savefile == TRUE.
#' @param backup logical. Whether the existing target file, if any, should be saved as backup.
#'
#' @return a mindmap file, which can be viewed by common mindmap software, such as 'FreeMind' (<http://freemind.sourceforge.net/wiki/index.php/Main_Page>) and 'XMind' (<http://www.xmind.net>).
#' @export
#' @examples
#' folder <- system.file('examples/md', package = 'mindr')
#' md2mm(folder = folder)
#' md2mm(folder = folder, remove_curly_bracket = TRUE)
dir2mm <- function(path = './',
savefilename = 'mindr',
output = c('mm', 'txt', 'md'),
backup = TRUE) {
output <- match.arg(output)
if (dir.exists(path)) {
if_files = FALSE
tree <- paste0('tree "', path, '"', ifelse(if_files, ' /f', ''))
mytree <- system(tree, intern = T)
if('txt' %in% output) {
writeLines(mytree, paste0(savefilename, '.txt'), useBytes = TRUE)
message(paste(savefilename), '.txt is generated!')
}
mytree <- mytree[-(1:2)]
headers <- sapply(mytree, function(x) strsplit(x, ifelse(grepl('├─', x), '├─', '└─'))[[1]][2])
attributes(headers) <- NULL
header_level <- sapply(mytree, function(x) length(gregexpr('│', x)[[1]]))
attributes(header_level) <- NULL
md <- paste(sapply(header_level, function(x) paste0(rep('#', x), collapse = '')), headers)
mm <- mdtxt2mmtxt(title = path, mmtxt = md)
if (backup & file.exists(paste0(savefilename, '.mm'))){
message(paste0(savefilename, '.mm already exits.'))
savefilename <- paste0(savefilename, '-', format(Sys.time(), '%Y-%m-%d-%H-%M-%S'))
}
if('md' %in% output){
writeLines(text = md, paste0(savefilename, '.md'), useBytes = TRUE)
message(paste(savefilename), '.md is generated!')
}
if('mm' %in% output){
writeLines(text = md, paste0(savefilename, '.mm'), useBytes = TRUE)
message(paste(savefilename), '.mm is generated!')
}
} else {message(paste('The directory', folder, 'does not exist!'))}
}
print('\U+2502')
print('\u+2502')
print('\U2502')
print('\\U2502')
library(mindr)
iconv('│')
tree <- 'tree "d:/temp"'
mytree <- system(tree, intern = T)
mytree
mytree
tree <- 'tree "d:/temp /A"'
mytree <- system(tree, intern = T)
mytree
mytree
mytree
tree <- 'tree "d:/temp" /A'
mytree <- system(tree, intern = T)
mytree
library(mindr)
mytree
mytree <- mytree[-(1:3)]
mytree
headers <- sapply(mytree, function(x) strsplit(x, ifelse(grepl('+---', x), '+---', '\\---'))[[1]][2])
headers
attributes(headers) <- NULL
headers
header_level <- sapply(mytree, function(x) length(gregexpr('|', x)[[1]]))
header_level
attributes(header_level) <- NULL
header_level
mytree
mytree
headers
gsub(pattern = '+---', '#', mytree)
gsub(pattern = '\+---', '#', mytree)
gsub(pattern = '\\+---', '#', mytree)
mytree <- gsub(pattern = '\\+---', '#', mytree)
gsub(pattern = '\\\\---', '#', mytree)
mytree <- gsub(pattern = '\\\\---', '#', mytree)
gsub(pattern = '|    ', '#', mytree)
gsub(pattern = '\\|    ', '#', mytree)
gsub(pattern = '\\|   ', '#', mytree)
mytree <- gsub(pattern = '   ', '#', mytree)
mytree
mytree <- system(tree, intern = T)
mytree <- mytree[-(1:3)]
# headers <- sapply(mytree, function(x) strsplit(x, ifelse(grepl('+---', x), '+---', '\\---'))[[1]][2])
# attributes(headers) <- NULL
mytree <- gsub(pattern = '\\+---', '#', mytree)
mytree <- gsub(pattern = '\\\\---', '#', mytree)
mytree <- gsub(pattern = '\\|   ', '#', mytree)
mytree <- gsub(pattern = '   ', '#', mytree)
mytree
mytree <- system(tree, intern = T)
mytree <- mytree[-(1:3)]
mytree
# headers <- sapply(mytree, function(x) strsplit(x, ifelse(grepl('+---', x), '+---', '\\---'))[[1]][2])
# attributes(headers) <- NULL
mytree <- gsub(pattern = '\\+---', '# ', mytree)
mytree <- gsub(pattern = '\\\\---', '# ', mytree)
mytree
mytree <- gsub(pattern = '\\|   ', '#', mytree)
mytree
mytree <- gsub(pattern = '    ', '#', mytree)
mytree
library(mindr)
path = './'
tree <- paste0('tree "', path, '" /A', ifelse(if_files, ' /f', ''))
if_files = FALSE
tree <- paste0('tree "', path, '" /A', ifelse(if_files, ' /f', ''))
mytree <- system(tree, intern = T)
mytree
path = ''
tree <- paste0('tree "', path, '" /A', ifelse(if_files, ' /f', ''))
mytree <- system(tree, intern = T)
mytree
path = '/'
tree <- paste0('tree "', path, '" /A', ifelse(if_files, ' /f', ''))
mytree <- system(tree, intern = T)
mytree
path = getwd()
tree <- paste0('tree "', path, '" /A', ifelse(if_files, ' /f', ''))
mytree <- system(tree, intern = T)
mytree
md <- mytree[-(1:3)]
# headers <- sapply(mytree, function(x) strsplit(x, ifelse(grepl('+---', x), '+---', '\\---'))[[1]][2])
# attributes(headers) <- NULL
md <- gsub(pattern = '\\+---', '# ', md)
md <- gsub(pattern = '\\\\---', '# ', md)
md <- gsub(pattern = '\\|   ', '#', md)
md <- gsub(pattern = '    ', '#', md)
mm <- mdtxt2mmtxt(title = path, mmtxt = md)
mm
library(mindr)
md <- mytree[-(1:3)]
# headers <- sapply(mytree, function(x) strsplit(x, ifelse(grepl('+---', x), '+---', '\\---'))[[1]][2])
# attributes(headers) <- NULL
md <- gsub(pattern = '\\+---', '# ', md)
md <- gsub(pattern = '\\\\---', '# ', md)
md <- gsub(pattern = '\\|   ', '#', md)
md <- gsub(pattern = '    ', '#', md)
md
mytree
tree <- paste0('tree "', path, '" /A', ifelse(if_files, ' /f', ''))
library(mindr)
library(mindr)
library(mindr)
path-NA
path <- NA
!is.na(path) & dir.exists(path)
library(mindr)
library(mindr)
